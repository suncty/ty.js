var fs = require('fs');
var path = require('path');

var ty = module.exports = function() {
    if(arguments.length == 1 && arguments[0] instanceof Array) {
        return ty["require"](arguments[0]);
    }
    else if(arguments.length == 2 && "function" == typeof arguments[1]) {
        return ty["function"](arguments[0], arguments[1]);
    }
    else if(arguments.length == 1 && "string" == typeof arguments[0]) {
        return ty["module"](arguments[0]);
    }
    else if(arguments.length == 2 && "string" == typeof arguments[0] && "string" == typeof arguments[1]) {
        return ty["module"](arguments[0], arguments[1]);
    }
    else if(arguments.length == 0) {
        for(var i in ty["data"].modules) {
            global[i] = {};
        }

        for(var i in ty["data"].modules) {
            (function(name, module){
                ty["data"].moduleName = name;
                module.start = module.end = null;
                module.out = {};
                module.m = require(module.filename);

                fs.watchFile(module.filename, function(curr, prev) {
                    if(module.end) module.end();
                    ty["data"].moduleName = name;
                    module.start = module.end = null;
                    for(var j in module.out)
                        delete module.out[j];
                    delete require.cache[module.filename];
                    module.m = require(module.filename);
                    if(module.start) module.start();
                });
            })(i, ty["data"].modules[i]);
        }

        for(var i in ty["data"].modules) {
            ty["data"].modules[i].start();
        }

        return ty;
    }
    else if(arguments.length == 1 && "function" == typeof arguments[0]) {
        ty["in"].startUpFunction.push(arguments[0]);
    }
};

ty["data"] = {
    moduleName: '',
    requires: {},
    functions: {},
    modules: {},
};

ty["out"] = {

};

ty["require"] = function(files) {
    if(!(files instanceof Array)) files = [files];

    for(var i in files) {
        var name, path;

        if(files[i].indexOf('=') != -1) {
            name = files[i].split('=')[0];
            path = files[i].split('=')[1];
        } else {
            name = path = files[i];
        }

        ty["data"].requires[name] = require(path);
    }

    return ty;
};

ty["function"] = function(name, func) {
    ty["data"].functions[name] = func;

    return ty;
};

ty["module"] = function(filename, prefix) {
    var dirname = path.dirname(process.mainModule.filename);
    filename = path.resolve(dirname, filename);

    ty["data"].modules[path.basename(filename, path.extname(filename))] = {
        prefix: prefix,
        filename: filename
    };

    return ty;
};

var tty = global.ty = function() {
    if(arguments.length == 0) {
        var ev = 'var ty = global.ty; ';

        for(var i in ty["data"].requires) {
            ev+= 'var ' + i + ' = ty.ty["data"].requires.' + i + '; ';
        }

        for(var i in ty["data"].functions) {
            ev+= 'var ' + i + ' = ty.ty["data"].functions.' + i + '; ';
        }

        for(var i in ty["data"].modules) {
            ev+= 'var ' + i + ' = ty.ty["data"].modules["' + i + '"].out; ';
        }

        return ev;
    }
    else if(arguments.length == 1 && "function" == typeof arguments[0]) {
        if(ty["data"].modules[ty["data"].moduleName].start == null)
            ty["data"].modules[ty["data"].moduleName].start = arguments[0];
        else
            ty["data"].modules[ty["data"].moduleName].end = arguments[0];
    }
    else if(arguments.length == 2 && "string" == typeof arguments[0] && "function" == typeof arguments[1]) {
        ty["data"].modules[ty["data"].moduleName].out[arguments[0]] = arguments[1];
    }
};

tty.ty = ty;
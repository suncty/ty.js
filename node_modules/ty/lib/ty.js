module.exports = ty;

var fs = require('fs');
var path = require('path');
var init = true;

function ty() {
    if(arguments.length == 1 && arguments[0] instanceof Array) {
        return ty["require"](arguments[0]);
    }
    else if(arguments.length == 2 && "function" == typeof arguments[1]) {
        return ty["function"](arguments[0], arguments[1]);
    }
    else if(arguments.length == 1 && "string" == typeof arguments[0]) {
        return ty["module"](arguments[0]);
    }
    else if(arguments.length == 2 && "string" == typeof arguments[0] && "string" == typeof arguments[1]) {
        return ty["module"](arguments[0], arguments[1]);
    }
    else if(arguments.length == 0) {
        if(init) {
            init = false;

            ty.out = {};
            for(var i in ty.modules) {
                global[ty.modules[i].name] = {};
            }

            for(var i in ty.modules) {
                (function(module){
                    ty.out[module.name] = require(module.filename);
                    for(var j in ty.out[module.name]) {
                        global[module.name][j] = ty.out[module.name][j];
                    }

                    fs.watchFile(module.filename, function(curr, prev) {
                        delete require.cache[module.filename];
                        var tmp = require(module.filename);
                        for(var j in global[module.name])
                            delete global[module.name][j];
                        for(var j in tmp)
                            global[module.name][j] = tmp[j];
                    });
                })(ty.modules[i]);
            }

            for(var i in ty["in"].startUpFunction) {
                ty["in"].startUpFunction[i]();
            }

            return ty;
        }
        else {
            var ev = 'var ty = global.ty; ';
            for(var i in ty.requires) {
                ev+= 'var ' + i + ' = ty.requires.' + i + '; ';
            }
            for(var i in ty.functions) {
                ev+= 'var ' + i + ' = ty.functions.' + i + '; ';
            }
            return ev;
        }
    }
    else if(arguments.length == 1 && "function" == typeof arguments[0]) {
        ty["in"].startUpFunction.push(arguments[0]);
    }
}

ty.requires = {};
ty.functions = {};
ty.modules = [];

ty["require"] = function(files) {
    if(!(files instanceof Array)) files = [files];

    for(var i in files) {
        var name, path;

        if(files[i].indexOf('=') != -1) {
            name = files[i].split('=')[0];
            path = files[i].split('=')[1];
        } else {
            name = path = files[i];
        }

        ty.requires[name] = require(path);
    }

    return ty;
};

ty["function"] = function(name, func) {
    ty.functions[name] = func;

    return ty;
};

ty["module"] = function(filename, prefix) {
    var dirname = path.dirname(process.mainModule.filename);
    filename = path.resolve(dirname, filename);

    ty.modules.push({
        prefix: prefix,
        filename: filename,
        name: path.basename(filename, path.extname(filename))
    });

    return ty;
};

ty["in"] = {
    "require": function(name, module) {
        ty["in"].requires[name] = module;
    },

    "requires": {},
    "startUpFunction": [],
}

global.ty = ty;